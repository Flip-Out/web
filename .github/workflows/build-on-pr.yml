name: PR build and tf plan check

on:
  pull_request:
    branches:
      - main
      - develop

permissions:
  pull-requests: write
  contents: read


jobs:
    build:
        runs-on: ubuntu-latest
        env:
          TERRAFORM_VERSION: 1.9.6
          AWS_ACCESS_KEY_ID: ${{ secrets.CI_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.CI_AWS_DEFAULT_REGION }}
          AWS_REGION: ${{ vars.CI_AWS_DEFAULT_REGION }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CI_CLOUDFLARE_API_TOKEN }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                fetch-depth: 0

            - name: Set ENV_NAME based on branch
              run: |
                if [[ "${{ github.base_ref }}" == "main" ]]; then
                  echo "ENV_NAME=prod" >> $GITHUB_ENV
                  echo "ECR_REPOSITORY=flip-out-app-prod" >> $GITHUB_ENV
                elif [[ "${{ github.base_ref }}" == "develop" ]]; then
                  echo "ENV_NAME=dev" >> $GITHUB_ENV
                  echo "ECR_REPOSITORY=flip-out-app-dev" >> $GITHUB_ENV
                else
                  echo "Branch not recognized. No environment set."
                fi
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_version: ${{ env.TERRAFORM_VERSION }}
            - name: Overwrite ecr state.tf file
              run: |
                echo "
                terraform {
                    backend \"s3\" {
                      bucket = \"flipout-terraform-state\"
                      key    = \"flip-out-app-$ENV_NAME/terraform.tfstate\"
                      region = \"eu-west-1\"
                  }
                }
                " > .devops/terraform/ecr/state.tf
                cat .devops/terraform/ecr/state.tf

            - name: Initialize ECR Terraform
              run: terraform -chdir=".devops/terraform/ecr" init

            - name: Terraform ECR Plan
              run: terraform -chdir=".devops/terraform/ecr" plan -var "deploy_env=$ENV_NAME" -out=ecr-plan.out

            - name: Show Terraform Plan
              run: |
                echo '### TF ECR changes' > ecr-plan.txt
                echo '```' >> ecr-plan.txt
                terraform -chdir=".devops/terraform/ecr" show -no-color ecr-plan.out >> ecr-plan.txt
                echo '```' >> ecr-plan.txt

            - name: Add ECR Terraform Plan as PR comment
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                header: terraform-ecr-plan
                path: ecr-plan.txt

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              run: |
                # Build a docker container and
                # push it to ECR so that it can
                # be deployed to ECS.
                docker build --target compile .

            - name: Overwrite ecs state.tf file
              run: |
                echo "
                terraform {
                    backend \"s3\" {
                      bucket = \"flipout-terraform-state\"
                      key    = \"flip-out-app-ecs-$ENV_NAME/terraform.tfstate\"
                      region = \"eu-west-1\"
                  }
                }
                " > .devops/terraform/ecs/state.tf
                cat .devops/terraform/ecs/state.tf

            - name: Initialize Service Terraform
              run: terraform -chdir=".devops/terraform/ecs" init

            - name: Terraform Service Plan
              run: terraform -chdir=".devops/terraform/ecs" plan -var "deploy_env=$ENV_NAME" -var "image_tag=$IMAGE_TAG" -out=plan.out

            - name: Show Service Terraform Plan
              run: |
                echo '### TF Service changes' > plan.txt
                echo '```' >> plan.txt
                terraform -chdir=".devops/terraform/ecs" show -no-color plan.out >> plan.txt
                echo '```' >> plan.txt

            - name: Add Service Terraform Plan as PR comment
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                header: terraform-service-plan
                path: plan.txt
